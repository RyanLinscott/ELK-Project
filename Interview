## Domain Cloud Security
_Question: Cloud Access Control_

Controlling access to a cloud network is very important as you must have the right balance between availability while also ensure proper security measures are in place to protect the user and and information being shared across the network.  With cloud becoming more and more prominent as companies switch to a hybrid model it is imperative that the "network of the future" remains a safe secure way to store data.

Through my most recent project I set up a cloud network containing one jump box to access the network, three web servers and one ELK server to monitor what was happening within the network.  One of the first tasks I had to do was create a security group which set policies that limited access to all the servers from anyone other than myself and my own personal computer.  Even with those policies in place my own computer could only access the servers originally through the jump box I created.  This was a server that allowed me to SSH into it only with my private key and from there I was able to quickly set up a docker container with ansible which was able to access the three web servers.  Only once all servers were online and security rules were in place was I able to add a ELK server to the network which was also only accessable from the jump box.  This server is configured with Filebeat and Metricbeat to help monitor the acitvity happening on the three web servers.

From the very beginning before any servers came up I make a simple deny any any rule.  This was used to help protect the network and servers while it was being brought online.  Once the jump box and three web servers were online I added a rule that only allowed the web servers to be accessed from the jumpbox ansible container.  This was accomplished by generating a public key that would shared between all the servers.  My own personal host computer could not directly access the servers because it did not have public key on my host computer.  Even if I had the public key on my computer I set a rule in place that only allowed SSH services to the web servers from the public IP of the jump box.  When my jump box could access my web servers I added a rule that allowed me to ssh from my host computer to my jump box.  This in a roundabout way is similar to two factor authentication as it first requires my host computer to have access to the jump box via my private key, and from there and only then would I have my docker containers key to access the web servers and the ELK machine.  At no time was there a direct link between my host and any webservers or ELK machine.

Access to the web servers is important as there are taking up resources in a region where they might be limited, to help alleviate any potential overload on the web servers a load balancer was brought in to ensure that if one server is being hit with an excessive amount of requests services could still continue.  TCP traffic to the servers over port 80 was added in a later security rule, but it was important that though only approved IP's would be able to access the servers.  Any outside threat will hopefully be stopped or at least extremely inconvenienced due to the inbound security rule that allowed port 80 traffic to my load balancer from my own personal host computer.   
